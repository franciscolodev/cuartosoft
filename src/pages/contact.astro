---
import config from "@/config/config.json";
import Base from "@/layouts/Base.astro";
import { markdownify } from "@/lib/utils/textConverter";
import type { CollectionEntry } from "astro:content";
import { getEntry } from "astro:content";

const entry = (await getEntry(
  "contact",
  "-index"
)) as CollectionEntry<"contact">;
const { contact_form_action } = config.params;
const { title, description, info } = entry.data;
---

<Base title={title} description={description}>
  <section class="section">
    <div class="container">
      <h1 class="text-center font-normal" set:html={markdownify(title)} />
      <div class="section row pb-0">
        <div class="col-12 md:col-6 lg:col-7">
          <form class="contact-form" id="contactForm">
            <div class="mb-3">
              <input
                class="form-input w-full rounded"
                name="name"
                id="name"
                type="text"
                placeholder="Name"
                required
              />
            </div>
            <div class="mb-3">
              <input
                class="form-input w-full rounded"
                name="email"
                id="email"
                type="email"
                placeholder="Your email"
                required
              />
            </div>
            <div class="mb-3">
              <input
                class="form-input w-full rounded"
                name="subject"
                id="subject"
                type="text"
                placeholder="Subject"
                required
              />
            </div>
            <div class="mb-3">
              <textarea
                class="form-textarea w-full rounded-md"
                id="message"
                rows="7"
                placeholder="Your message"
                required></textarea>
            </div>
            <button type="submit" class="btn btn-primary">Enviar</button>
          </form>
        </div>
        <div class="content col-12 md:col-6 lg:col-5">
          <h4 set:html={markdownify(info?.title)} />
          <p class="mt-4" set:html={markdownify(info?.description)} />
          <ul class="contact-list mt-5 list-none pl-0">
            {
              info?.contacts?.map((contact) => (
                <li>
                  <strong
                    class="text-text-dark"
                    set:html={markdownify(contact)}
                  />
                </li>
              ))
            }
          </ul>
        </div>
      </div>
    </div>
  </section>

  <script>
    const form = document.getElementById("contactForm");
    const toEmail = "cuartosoft@gmail.com"; // Mail de destino

    form?.addEventListener("submit", function (e) {
      e.preventDefault();

      const name = encodeURIComponent((document.getElementById("name") as HTMLInputElement).value.trim());
      const email = encodeURIComponent((document.getElementById("email") as HTMLInputElement).value.trim());
      const subject = encodeURIComponent((document.getElementById("subject") as HTMLInputElement).value.trim() || "Contacto desde web");
      const message = encodeURIComponent((document.getElementById("message") as HTMLTextAreaElement).value.trim() + "\n\nDesde: " + email);

      // Abrir Gmail en pesta√±a nueva
      const gmailUrl = `https://mail.google.com/mail/?view=cm&to=${encodeURIComponent(toEmail)}&su=${subject}&body=${message}`;
      window.open(gmailUrl, "_blank");

      // üîÅ Fallback: mailto (si el usuario no usa Gmail)
      // const mailtoUrl = `mailto:${toEmail}?subject=${subject}&body=${message}`;
      // window.location.href = mailtoUrl;
    });
  </script>
</Base>
